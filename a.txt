no of lines is68
Node
initialization statement int value
initialization statement Node left, right
constructor
no of lines 3
this.value = value
left = null
right = null

Test
method name insert(Node node, int value)
no of lines 25
if (value < node.value)
{
if (node.left != null)
{
insert(node.left, value)
}
else
{
System.out.println(" Inserted " + value + " to left of " + node.value)
node.left = new Node(value)
}
}
else if (value > node.value)
{
if (node.right != null)
{
insert(node.right, value)
}
else
{
System.out.println("  Inserted " + value + " to right of "
+ node.value)
node.right = new Node(value)
}
}

method name traverseInOrder(Node node)
no of lines 6
if (node != null)
{
traverseInOrder(node.left)
System.out.print(" " + node.value)
traverseInOrder(node.right)
}

method name main(String args[])
no of lines 13
Test tree = new Test()
Node root = new Node(5)
System.out.println("Binary Tree Example")
System.out.println("Building tree with root value " + root.value)
tree.insert(root, 2)
tree.insert(root, 4)
tree.insert(root, 8)
tree.insert(root, 6)
tree.insert(root, 7)
tree.insert(root, 3)
tree.insert(root, 9)
System.out.println("Traversing tree in order")
tree.traverseInOrder(root)

