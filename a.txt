test/t2/Test.java
name of class Node
no of variables is 3
data type int name value
data type Node name left
data type Node name right
no of methods 1
method name is Node no is 0
instructions are 
instrcution count is 0
type 0

[start 
class is 
method no is91804512
method is ]

instrcution count is 1
type 1
[this.value = value]

instrcution count is 2
type 1
[left = null]

instrcution count is 3
type 1
[right = null]

instrcution count is 4
type 8

[end 
class is 
method no is1908275680
method is ]



name of class Test
no of variables is 0
no of methods 3
method name is insert no is 1
instructions are 
instrcution count is 5
type 0

[start 
class is 
method no is91822176
method is ]

instrcution count is 6
type 6

[if (value < node.value)
class is 
method no is816
method is ]

instrcution count is 12
type 7

[else
class is 
method no is816
method is ]

instrcution count is 19
type 8

[end 
class is 
method no is816
method is ]



method name is traverseInOrder no is 2
instructions are 
instrcution count is 20
type 0

[start 
class is 
method no is20
method is ]

instrcution count is 21
type 6

[if (node != null)
class is 
method no is208
method is ]

instrcution count is 25
type 8

[end 
class is 
method no is208
method is ]



method name is main no is 3
instructions are 
instrcution count is 26
type 0

[start 
class is 
method no is91845856
method is ]

instrcution count is 27
type 5

[int a=1
varname is a
datatype isint
type is 5]

instrcution count is 28
type 5

[Test tree = new Test()
varname is tree
datatype isTest
type is 5]

instrcution count is 29
type 5

[Node root = new Node(5)
varname is root
datatype isNode
type is 5]

instrcution count is 30
type 1
[System.out.println("Binary Tree Example")]

instrcution count is 31
type 1
[System.out.println("Building tree with root value " + root.value)]

instrcution count is 32
type 1
[tree.insert(root, 2)]

instrcution count is 33
type 1
[tree.insert(root, 4)]

instrcution count is 34
type 1
[tree.insert(root, 8)]

instrcution count is 35
type 1
[tree.insert(root, 6)]

instrcution count is 36
type 1
[tree.insert(root, 7)]

instrcution count is 37
type 1
[tree.insert(root, 3)]

instrcution count is 38
type 1
[tree.insert(root, 9)]

instrcution count is 39
type 1
[System.out.println("Traversing tree in order")]

instrcution count is 40
type 1
[tree.traverseInOrder(root)]

instrcution count is 41
type 8

[end 
class is 
method no is464
method is ]



